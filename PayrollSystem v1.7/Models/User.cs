// File Directory: PayrollSystem/Models/User.cs
using System; // Required for ArgumentException if you add validation later
using PayrollSystem.Enums; // Required to use the UserRole enum

namespace PayrollSystem.Models
{
    public class User
    {
        public string Username { get; set; }
        public string PasswordHash { get; set; } // Stores the hashed password
        public string PasswordSalt { get; set; } // Stores the salt used for hashing this user's password
        public UserRole Role { get; set; }

        // Constructor
        // The passwordHash and passwordSalt will be generated by AuthService and passed here
        public User(string username, string passwordHash, string passwordSalt, UserRole role)
        {
            if (string.IsNullOrWhiteSpace(username))
            {
                // Adding basic validation for clarity, though AuthService might also check
                throw new ArgumentException("Username cannot be empty.", nameof(username));
            }
            Username = username;
            PasswordHash = passwordHash;
            PasswordSalt = passwordSalt;
            Role = role;
        }

        // Parameterless constructor:
        // Often helpful for JSON deserialization libraries, especially if you have multiple constructors.
        // System.Text.Json can often work without it if property names match and one constructor is clear,
        // but it's good practice to include if you might use other serializers or for flexibility.
        public User() {}


        // It's good practice to override ToString() for debugging or logging
        public override string ToString()
        {
            return $"Username: {Username}, Role: {Role}";
        }
    }
}